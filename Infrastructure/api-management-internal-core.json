{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceName": {
      "type": "string"
    },
    "productName": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "string",
      "allowedValues": [
        "1",
        "2"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualNetworkType": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "External",
        "Internal"
      ],
      "metadata": {
        "description": "Type of virtual networking to deploy: allowed values are an empty string, External, or Internal. If not empty, virtualNetworkSubnetId is required."
      }
    },
    "virtualNetworkSubnetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the subnet to use for VNet integration. Only used if VirtualNetworkType is supplied."
      }
    }
  },
  "variables": {
    "virtualNetworkConfiguration": "[if(equals(parameters('virtualNetworkType'), ''), json('{}'), json(concat('{\"subnetResourceId\": \"', parameters('virtualNetworkSubnetId'), '\"}')))]"
  },
  "resources": [
    {
      "apiVersion": "2019-12-01",
      "name": "[parameters('serviceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "virtualNetworkType": "[parameters('virtualNetworkType')]",
        "virtualNetworkConfiguration": "[variables('virtualNetworkConfiguration')]"
      },
      "resources": [
        {
          "apiVersion": "2019-12-01",
          "type": "products",
          "name": "[parameters('ProductName')]",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('serviceName'))]"
          ],
          "properties": {
            "displayName": "[parameters('productName')]",
            "description": "[parameters('productName')]",
            "terms": "Terms for example product",
            "subscriptionRequired": false,
            "state": "published"
          }
        }
      ]
    }
  ],
  "outputs": {
    "systemAssignedManagedIdentity": {
      "type": "string",
      "value": "[reference(parameters('serviceName'), '2019-12-01', 'Full').identity.principalId]"
    }
  }
}